---
- hosts: localhost
  tasks:
    - name: override the overcloud_deploy.sh.j2 for composable roles
      vars:
        oc_deploy_template: "{{ ansible_user_dir }}/jetpack/templates/composable_roles_overcloud_deploy.sh.j2"
        infrared_oc_deploy_template:  "{{ ansible_user_dir }}/.infrared/plugins/tripleo-overcloud/templates/overcloud_deploy.sh.j2"
      shell: |
        cp   {{ oc_deploy_template }} {{ infrared_oc_deploy_template }}

    - name: create flavors
      shell: |
        source ~/stackrc
        openstack flavor create --id auto --ram 4096 --disk 40 --vcpus 1 baremetal{{ item }}
        openstack flavor set --property "capabilities:boot_option"="local" --property "capabilities:profile"="baremetal{{ item }}" baremetal{{ item }}
        openstack flavor set baremetal{{ item }} --property "resources:VCPU"="0"
        openstack flavor set baremetal{{ item }} --property "resources:MEMORY_MB"="0"
        openstack flavor set baremetal{{ item }} --property "resources:DISK_GB"="0"
        openstack flavor set baremetal{{ item }} --property "resources:CUSTOM_BAREMETAL"="1"
      with_items: "{{ machine_types }} "
      delegate_to: undercloud
      when: osp_release|int < 17

    - name: avoid compute role of controller machine type when insufficient nodes
      set_fact:
        machine_types: "{{ machine_types | difference(controller_machine_type) }}"
      when: machine_count[controller_machine_type]|int == controller_count|int

    - name: avoid compute role of ceph machine type when insufficient nodes
      set_fact:
        machine_types: "{{ machine_types | difference(ceph_machine_type) }}"
      when: ceph_enabled and (machine_count[ceph_machine_type]|int == ceph_node_count|int)

- hosts: undercloud
  vars:
    machine_types:  "{{ hostvars['localhost']['machine_types'] }}"
    tn10rt: "{{ hostvars['localhost']['tn10rt'] }}"
  tasks:
    - name: copy roles directory
      command: |
        cp -r /usr/share/openstack-tripleo-heat-templates/roles /home/stack

    - name: copy roles directory
      command:  |
        cp -r ~/roles/Compute.yaml ~/roles/Compute{{ item }}.yaml
      with_items: "{{ machine_types }}"

    - name: replace control plane interface
      lineinfile:
        path: "/home/stack/roles/Compute{{ item }}.yaml"
        regexp: '- name:'
        line: "- name: Compute{{ item }}"
      with_items: "{{ machine_types }}"

    - name: replace control plane interface
      lineinfile:
        path: "/home/stack/roles/Compute{{ item }}.yaml"
        regexp: '  HostnameFormatDefault:'
        line: "  HostnameFormatDefault: 'compute{{ item }}-%index%'"
      with_items: "{{ machine_types }}"

    - block:
        - name: copy role for computePCI
          command: |
            cp -r ~/roles/Compute.yaml ~/roles/Compute{{ item }}PCI.yaml
          when: item == pci_node_type
          with_items: "{{ machine_types }}"

        - name: replace control plane interface PCI
          lineinfile:
            path: "/home/stack/roles/Compute{{ item }}PCI.yaml"
            regexp: '- name:'
            line: "- name: Compute{{ item }}PCI"
          when: item == pci_node_type
          with_items: "{{ machine_types }}"

        - name: replace control plane interface PCI
          lineinfile:
            path: "/home/stack/roles/Compute{{ item }}PCI.yaml"
            regexp: '  HostnameFormatDefault:'
            line: "  HostnameFormatDefault: '%stackname%-compute{{ item }}pci-%index%'"
          when: item == pci_node_type
          with_items: "{{ machine_types }}"
      when: passthrough_nvme is defined and pci_node_type is defined

    - name: set roles
      vars:
        roles: "{{ ('Controller' + ' CephStorage') if ceph_enabled else 'Controller' }}"
      set_fact:
        roles: "{{ roles + ' Compute' + item }}"
      when: (passthrough_nvme is not defined) and not manila_enabled
      with_items: "{{ machine_types }}"

    - name: set roles
      vars:
        roles: "{{ ('ControllerStorageNfs' + ' CephStorage') if ceph_enabled else 'ControllerStorageNfs' }}"
      set_fact:
        roles: "{{ roles + ' Compute' + item }}"
      when: (passthrough_nvme is not defined) and manila_enabled
      with_items: "{{ machine_types }}"

    - name: set roles
      vars:
        roles: "{{ 'Controller' + ' CephStorage' + ( ' Compute' + pci_node_type + 'PCI') if ceph_enabled else 'Controller' + ( ' Compute' + pci_node_type + 'PCI')  }}"
      set_fact:
        roles: "{{ roles + ' Compute' + item }}"
      when: passthrough_nvme is defined and pci_node_type is defined
      with_items: "{{ machine_types }}"

    - name: generate roles_data
      shell: |
        source ~/stackrc
        openstack overcloud roles generate -o ~/roles_data.yaml --roles-path ~/roles {{ roles }}
      args:
        chdir: "/home/stack"
